{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.route.ts","webpack:///./src/app/components/authentication/authentication.component.css","webpack:///./src/app/components/authentication/authentication.component.html","webpack:///./src/app/components/authentication/authentication.component.ts","webpack:///./src/app/components/buy-now-card/buy-now-card.component.css","webpack:///./src/app/components/buy-now-card/buy-now-card.component.html","webpack:///./src/app/components/buy-now-card/buy-now-card.component.ts","webpack:///./src/app/components/buy-property-details/buy-property-details.component.css","webpack:///./src/app/components/buy-property-details/buy-property-details.component.html","webpack:///./src/app/components/buy-property-details/buy-property-details.component.ts","webpack:///./src/app/components/details-card/details-card.component.css","webpack:///./src/app/components/details-card/details-card.component.html","webpack:///./src/app/components/details-card/details-card.component.ts","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/otp-verification/otp-verification.component.css","webpack:///./src/app/components/otp-verification/otp-verification.component.html","webpack:///./src/app/components/otp-verification/otp-verification.component.ts","webpack:///./src/app/components/property-list/property-list.component.css","webpack:///./src/app/components/property-list/property-list.component.html","webpack:///./src/app/components/property-list/property-list.component.ts","webpack:///./src/app/components/rent/rent.component.css","webpack:///./src/app/components/rent/rent.component.html","webpack:///./src/app/components/rent/rent.component.ts","webpack:///./src/app/components/search/search.component.css","webpack:///./src/app/components/search/search.component.html","webpack:///./src/app/components/search/search.component.ts","webpack:///./src/app/components/searchbox/searchbox.component.css","webpack:///./src/app/components/searchbox/searchbox.component.html","webpack:///./src/app/components/searchbox/searchbox.component.ts","webpack:///./src/app/components/sell/sell.component.css","webpack:///./src/app/components/sell/sell.component.html","webpack:///./src/app/components/sell/sell.component.ts","webpack:///./src/app/components/sign-in/sign-in.component.css","webpack:///./src/app/components/sign-in/sign-in.component.html","webpack:///./src/app/components/sign-in/sign-in.component.ts","webpack:///./src/app/components/user-registration/user-registration.component.css","webpack:///./src/app/components/user-registration/user-registration.component.html","webpack:///./src/app/components/user-registration/user-registration.component.ts","webpack:///./src/app/models/login.model.ts","webpack:///./src/app/models/search.model.ts","webpack:///./src/app/models/sellData.model.ts","webpack:///./src/app/models/user.details.model.ts","webpack:///./src/app/service/authentication.service.ts","webpack:///./src/app/service/datatransfer.service.ts","webpack:///./src/app/service/property.resolver.ts","webpack:///./src/app/service/shared/http.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"navlogo\\\">\\n<amexio-nav [logo]=\\\"'assets/images/logos/cardslogo.jpg'\\\" [title]=\\\"'Cards.com'\\\" \\n [transparent]=\\\"dtsService.transparentFlag\\\"  [enable-side-nav-position]=\\\"false\\\" (onNavTitleClick)=\\\"onCardsclick($event)\\\">\\n    <!-- <amexio-nav-item position-left [type]=\\\"'link'\\\" [icon]=\\\"'fa fa-angle-double-up'\\\" [title]=\\\"'Cards.com'\\\" (onNavItemClick)=\\\"onCardsclick($event)\\\">\\n    </amexio-nav-item> -->\\n    <amexio-nav-item position-right [type]=\\\"'link'\\\" [icon]=\\\"'fa fa-user'\\\" [title]=\\\"'Login'\\\" (onNavItemClick)=\\\"onLoginLinkClick($event)\\\">\\n    </amexio-nav-item>\\n</amexio-nav>\\n</div>\\n<!-- <app-authentication [showWindow]=\\\"auth_Service.showWindow\\\"></app-authentication> -->\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\nimport { AuthenticationService } from './service/authentication.service';\nimport {Router} from '@angular/router';\nimport { DatatransferService  } from './service/datatransfer.service';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\nshowWindow: boolean;\n  constructor(public auth_Service: AuthenticationService, public route: Router, public dtsService: DatatransferService) {\n  }\n  onCardsclick() {\n    this.route.navigate(['/home']);\n  }\n  onLoginLinkClick() {\n     this.route.navigate(['/login']);\n     this.auth_Service.showLogin = true;\n     this.auth_Service.showOTPWindow = false;\n     this.auth_Service.showregisterWindow = false;\n     this.auth_Service.showSignInWindow = false;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { AmexioWidgetModule, AmexioLayoutModule, AmexioPaneModule, } from 'amexio-ng-extensions';\nimport { UserRegistrationComponent } from './components/user-registration/user-registration.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { SignInComponent } from './components/sign-in/sign-in.component';\nimport { RouterModule } from '@angular/router';\nimport { SellComponent } from './components/sell/sell.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { OtpVerificationComponent } from './components/otp-verification/otp-verification.component';\nimport { SearchboxComponent } from './components/searchbox/searchbox.component';\nimport { RentComponent } from './components/rent/rent.component';\nimport { AuthenticationComponent } from './components/authentication/authentication.component';\nimport { PropertyListComponent } from './components/property-list/property-list.component';\nimport { BuyPropertyDetailsComponent } from './components/buy-property-details/buy-property-details.component';\nimport { BuyNowCardComponent } from './components/buy-now-card/buy-now-card.component';\nimport { DetailsCardComponent } from './components/details-card/details-card.component';\nimport { SearchComponent } from './components/search/search.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport {HomeComponent} from './components/home/home.component';\nimport {routes} from './app.route';\nimport {PropertyResolver} from \"./service/property.resolver\";\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserRegistrationComponent,\n    LoginComponent,\n    SignInComponent,\n    SellComponent,\n    OtpVerificationComponent,\n    SearchboxComponent,\n    RentComponent,\n    AuthenticationComponent,\n    PropertyListComponent,\n    BuyPropertyDetailsComponent,\n    BuyNowCardComponent,\n    DetailsCardComponent,\n    SearchComponent,\n    HomeComponent\n    ],\n  imports: [\n    BrowserModule, HttpClientModule, FormsModule, ReactiveFormsModule, RouterModule.forRoot(routes, {useHash: true}), AmexioWidgetModule, AmexioLayoutModule, AmexioPaneModule, BrowserAnimationsModule\n  ],\n  providers: [PropertyResolver],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Routes} from '@angular/router';\nimport {HomeComponent} from './components/home/home.component';\nimport {SellComponent} from './components/sell/sell.component';\nimport {RentComponent} from './components/rent/rent.component';\nimport {PropertyListComponent} from './components/property-list/property-list.component';\nimport {AuthenticationComponent} from './components/authentication/authentication.component';\nimport {BuyPropertyDetailsComponent} from './components/buy-property-details/buy-property-details.component';\nimport {BuyNowCardComponent} from './components/buy-now-card/buy-now-card.component';\nimport {PropertyResolver} from './service/property.resolver';\n/**\n * Created by dattaram on 20/2/19.\n */\nexport const routes: Routes = [\n\n  {\n    path: '', redirectTo: 'home', pathMatch: 'full'\n  },\n  {\n    path: 'home',\n    component: HomeComponent\n  },\n  {\n    path: 'sell',\n    component: SellComponent\n  },\n  {\n    path: 'app-rent',\n    component: RentComponent\n  },\n  {\n    path: 'app-property-details/:id/:category',\n    component: PropertyListComponent,\n    resolve: { propertyMetadata: PropertyResolver}\n  },\n  {\n    path: 'login',\n    component: AuthenticationComponent\n  },\n  {\n    path: 'app-buy-property-details',\n    component: BuyPropertyDetailsComponent\n  }, {\n    path: 'app-buy-now-card',\n    component: BuyNowCardComponent\n  }\n];\n","module.exports = \"\"","module.exports = \"<div>\\n  <img class=\\\"pic-style\\\">\\n  <amexio-row>\\n    <amexio-column size=\\\"12\\\" style=\\\"padding-top:6%\\\">\\n      <amexio-layout-columns class=\\\"horizontal-position\\\" [orientation]=\\\"'horizontal'\\\" [border]=\\\"false\\\" [alignment]=\\\"'center'\\\">\\n        <amexio-layout-item>\\n          <amexio-layout-columns [fit]=\\\"true\\\" [border]=\\\"false\\\" [orientation]=\\\"'vertical'\\\" [alignment]=\\\"'center'\\\">\\n            <amexio-layout-item>\\n              <!-- <div class=\\\"main-class\\\"> -->\\n              <amexio-row>\\n                <amexio-column size=\\\"12\\\" [fit]=\\\"true\\\">\\n                  <app-login [showLogin]=\\\"auth_Service.showLogin\\\"></app-login>\\n                  <app-user-registration [user-model]=\\\"userModel\\\" [showregisterWindow]=\\\"auth_Service.showregisterWindow\\\"></app-user-registration>\\n                  <app-sign-in [login-model]=\\\"loginModel\\\" [showSignInWindow]=\\\"auth_Service.showSignInWindow\\\"></app-sign-in>\\n                  <app-otp-verification [showOTPWindow]=\\\"auth_Service.showOTPWindow\\\"></app-otp-verification>\\n                </amexio-column>\\n              </amexio-row>\\n              <!-- </div> -->\\n            </amexio-layout-item>\\n          </amexio-layout-columns>\\n        </amexio-layout-item>\\n      </amexio-layout-columns>\\n    </amexio-column>\\n  </amexio-row>\\n</div>\"","import { Component, OnInit,Input } from '@angular/core';\nimport { AuthenticationService } from \"../../service/authentication.service\";\nimport { UserDetails } from \"../../models/user.details.model\";\nimport { LoginModel } from \"../../models/login.model\";\nimport { DatatransferService } from \"../../service/datatransfer.service\";\n\n@Component({\n  selector: 'login',\n  templateUrl: './authentication.component.html',\n  styleUrls: ['./authentication.component.css']\n})\nexport class AuthenticationComponent implements OnInit {\n  // @Input() showWindow:boolean;\n  userModel:UserDetails;\n  loginModel:LoginModel;\n  constructor(private auth_Service:AuthenticationService,public dtsService:DatatransferService) {\n    this.userModel=new UserDetails();\n    this.loginModel=new LoginModel();\n    this.dtsService.transparentFlag=false;\n   }\n\n  ngOnInit(\n  \n  ) {\n    this.auth_Service.showLogin=true;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div>\\n  <img class=\\\"pic-style\\\">\\n  <amexio-row>\\n    <amexio-column size=\\\"3\\\">\\n    </amexio-column>\\n    <amexio-column size=\\\"6\\\" style=\\\"padding-top:7%\\\">\\n      <amexio-layout-columns class=\\\"horizontal-position\\\" [orientation]=\\\"'horizontal'\\\" [border]=\\\"false\\\" [alignment]=\\\"'center'\\\">\\n        <amexio-layout-item>\\n          <amexio-layout-columns [fit]=\\\"true\\\" [border]=\\\"false\\\" [orientation]=\\\"'vertical'\\\" [alignment]=\\\"'center'\\\">\\n            <amexio-layout-item>\\n              <div class=\\\"main-class\\\">\\n                <amexio-row>\\n                  <amexio-column size=\\\"1\\\">\\n                  </amexio-column>\\n                  <amexio-column size=\\\"10\\\" [fit]=\\\"true\\\">\\n                    <amexio-card [footer]=\\\"true\\\" [footer-align]=\\\"'center'\\\">\\n                      <amexio-body>\\n                         <amexio-row>\\n                          <amexio-column size=\\\"12\\\" [fit]=\\\"true\\\">\\n                        <amexio-layout-columns [border]=\\\"false\\\" [orientation]=\\\"'horizontal'\\\" [alignment]=\\\"right\\\">\\n                          <amexio-layout-item>\\n                            <amexio-image style=\\\"cursor: pointer;\\\" [icon-class]=\\\"'fa fa-arrow-left fa-lg'\\\" [tooltip]=\\\"'Back'\\\" (onClick)=\\\"onBack()\\\"></amexio-image>\\n                          </amexio-layout-item>\\n                        </amexio-layout-columns>\\n                        <amexio-badge [absolute]=\\\"true\\\" [background]=\\\"'black'\\\" [color]=\\\"'white'\\\" [top]=\\\"'0px'\\\" [right]=\\\"'0px'\\\">\\n                          <amexio-label size=\\\"medium-bold\\\">Buy Now</amexio-label>\\n                        </amexio-badge>\\n                          </amexio-column>\\n                         </amexio-row>\\n                        <amexio-row>\\n                          <amexio-column size=\\\"12\\\" [fit]=\\\"true\\\">\\n                            <amexio-layout-columns  [border]=\\\"false\\\" [fit]=\\\"true\\\"\\n                [alignment]=\\\"'start'\\\" [orientation]=\\\"'vertical'\\\">\\n                <amexio-layout-item>\\n                 <amexio-text-input [field-label]=\\\"'Pay'\\\" name=\\\"name\\\" [place-holder]=\\\"'Pay'\\\" [(ngModel)]=\\\"payment.price\\\">\\n                            </amexio-text-input>\\n                            <amexio-radio-group [field-label]=\\\"'Payement methods'\\\" name=\\\"methods\\\" [display-field]=\\\"'name'\\\" [value-field]=\\\"'id'\\\" [horizontal]=\\\"true\\\"\\n                              [data]=\\\"paymentMethods\\\">\\n                            </amexio-radio-group>\\n                </amexio-layout-item>\\n              </amexio-layout-columns>\\n                          </amexio-column>\\n                        </amexio-row>\\n                      </amexio-body>\\n                      <amexio-action>\\n                        <amexio-button [size]=\\\"'default'\\\" [icon]=\\\"'fa fa-money'\\\" [label]=\\\"'Pay'\\\" [type]=\\\"'primary'\\\" [tooltip]=\\\"'Pay'\\\" (onClick)=\\\"onPayClick()\\\">\\n                        </amexio-button>\\n                      </amexio-action>\\n                    </amexio-card>\\n                  </amexio-column>\\n                  <amexio-column size=\\\"1\\\">\\n                  </amexio-column>\\n                </amexio-row>\\n              </div>\\n            </amexio-layout-item>\\n          </amexio-layout-columns>\\n        </amexio-layout-item>\\n      </amexio-layout-columns>\\n    </amexio-column>\\n    <amexio-column size=\\\"3\\\">\\n    </amexio-column>\\n  </amexio-row>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DatatransferService } from \"../../service/datatransfer.service\";\n\n@Component({\n  selector: 'app-buy-now-card',\n  templateUrl: './buy-now-card.component.html',\n  styleUrls: ['./buy-now-card.component.css']\n})\nexport class BuyNowCardComponent implements OnInit {\n  paymentMethods:any=[];\n  standardPaymentMethods:any=[];\n  payment:any;\n  constructor(public route:Router,public dtsService:DatatransferService) { \n    this.paymentMethods=[\n      {\n        \"id\":\"1\",\n        \"name\":\"Google Pay\"\n      },\n      {\n        \"id\":\"2\",\n        \"name\":\"Paypal\"\n      },\n      {\n        \"id\":\"3\",\n        \"name\":\"Apple Pay\"\n      },\n      {\n      \"id\":\"4\",\n      \"name\":\"Credit / Debit Cards\"\n    },{\n       \"id\":\"5\",\n      \"name\":\"Net Banking\"\n    }\n    ];\n    this.standardPaymentMethods=[{\n      \"id\":\"1\",\n      \"name\":\"Credit / Debit Cards\"\n    },{\n       \"id\":\"2\",\n      \"name\":\"Net Banking\"\n    }]\n  }\n\n  ngOnInit() {\n    this.payment =this.dtsService.propertyDetails;\n  }\n  onBack(){\n    this.route.navigate(['/app-buy-property-details']);\n  }\n  onPayClick(){\n    \n  }\n}\n","module.exports = \"\"","module.exports = \"<amexio-row >\\n  <amexio-column size =\\\"12\\\"\\n          [fit]=\\\"true\\\" style=\\\"padding-top:65px;background-color:grey;\\\">\\n      <amexio-layout-columns [fit]=\\\"true\\\" [border]=\\\"false\\\" [orientation]=\\\"'horizontal'\\\" [alignment]=\\\"'center'\\\">\\n                  <amexio-layout-item>\\n                    <app-searchbox [search-model]=\\\"searchModel\\\"></app-searchbox>\\n                  </amexio-layout-item>\\n                </amexio-layout-columns>\\n  </amexio-column>\\n<!-- </amexio-row>\\n<amexio-row> -->\\n  <amexio-column size=\\\"12\\\" >\\n    <amexio-card [header]=\\\"false\\\" [footer]=\\\"false\\\">\\n      <amexio-body>\\n        <amexio-row>\\n          <amexio-column size =\\\"12\\\"\\n                  [fit]=\\\"true\\\">\\n            <amexio-image style=\\\"cursor: pointer;\\\" [icon-class]=\\\"'fa fa-arrow-left fa-lg'\\\" [tooltip]=\\\"'Back'\\\" (onClick)=\\\"onBack()\\\"></amexio-image>\\n          </amexio-column>\\n          <amexio-column size=\\\"12\\\" [fit]=\\\"true\\\">\\n            <amexio-layout-grid [layout]=\\\"'Home'\\\">\\n              <!-- <amexio-grid-item [name]=\\\"'searchBox'\\\">\\n              \\n              </amexio-grid-item> -->\\n              <amexio-grid-item [name]=\\\"'gridicon'\\\">\\n                <amexio-image class=\\\"cardIconImage\\\" *ngFor=\\\"let photos of properyDetails.images\\\"  path=\\\"{{photos}}\\\" (onClick)=\\\"onImageClick(photos)\\\">\\n                </amexio-image>\\n              </amexio-grid-item>\\n              <amexio-grid-item [name]=\\\"'gridimage'\\\">\\n                <amexio-image class=\\\"maincardImage\\\" path=\\\"{{mainImagePath}}\\\">\\n                </amexio-image>\\n              </amexio-grid-item>\\n              <amexio-grid-item [name]=\\\"'griddescription'\\\">\\n                <app-details-card [data]=\\\"properyDetails\\\" [isListCard]=\\\"false\\\"></app-details-card>\\n                <div style=\\\"cursor: pointer\\\">\\n\\n                  <table>\\n                    <tr>\\n                      <td>\\n                        <p>{{properyDetails.description}} </p>\\n                      </td>\\n                    </tr>\\n\\n                  </table>\\n\\n                </div>\\n\\n                <ul *ngFor=\\\"let details of properyDetails.details\\\">\\n                  <li>{{details}}</li>\\n                </ul>\\n              </amexio-grid-item>\\n              <amexio-grid-item [name]=\\\"'gridmap'\\\">\\n                <amexio-google-map [initial-zoom-level]=\\\"12\\\" [height]=\\\"'500px'\\\" [initial-lat]=\\\"18.512840\\\" [initial-lng]=\\\"73.926220\\\" [data]=\\\"data\\\"\\n                  (onMarkerClick)=\\\"onMarkerClick($event)\\\" [google-map-key]=\\\"'AIzaSyDKSPX97z-ndeh_Mgq3xkaML2Kp9AwHA9s'\\\">\\n                </amexio-google-map>\\n              </amexio-grid-item>\\n              <amexio-grid-item [name]=\\\"'gridbutton'\\\">\\n                <amexio-row>\\n                  <amexio-column size=\\\"6\\\" [fit]=\\\"true\\\">\\n\\n                    <amexio-button [block]=\\\"true\\\" [size]=\\\"'default'\\\" [icon]=\\\"'fa fa-arrow-left'\\\" [label]=\\\"'Back to list'\\\" [type]=\\\"'secondary'\\\"\\n                      [tooltip]=\\\"'Back'\\\" (onClick)=\\\"onBack()\\\">\\n                    </amexio-button>\\n                  </amexio-column>\\n                  <amexio-column size=\\\"6\\\" [fit]=\\\"true\\\">\\n                    <amexio-button [block]=\\\"true\\\" [size]=\\\"'default'\\\" [icon]=\\\"'fa fa-money'\\\" [label]=\\\"'Buy Now'\\\" [type]=\\\"'primary'\\\" [tooltip]=\\\"'Buy Now'\\\"\\n                      (onClick)=\\\"onBuyNowClick(properyDetails)\\\">\\n                    </amexio-button>\\n                  </amexio-column>\\n                </amexio-row>\\n              </amexio-grid-item>\\n            </amexio-layout-grid>\\n          </amexio-column>\\n        </amexio-row>\\n      </amexio-body>\\n    </amexio-card>\\n  </amexio-column>\\n</amexio-row>\"","import { Component, OnInit } from '@angular/core';\nimport { DatatransferService } from \"../../service/datatransfer.service\";\nimport { GoogleMapOverlays } from 'amexio-ng-extensions';\nimport { Router } from '@angular/router';\nimport { AmexioGridLayoutService, GridConfig, GridConstants } from \"amexio-ng-extensions\";\nimport { SearchModel } from '../../models/search.model';\n\n@Component({\n  selector: 'app-buy-property-details',\n  templateUrl: './buy-property-details.component.html',\n  styleUrls: ['./buy-property-details.component.css']\n})\nexport class BuyPropertyDetailsComponent implements OnInit {\n \n  gridDesktop: GridConfig;\n  properyDetails: any = [];\n  data: GoogleMapOverlays[];\n  markerdata: GoogleMapOverlays;\n  mainImagePath: any;\n  searchModel: SearchModel;\n  constructor(public dtsService: DatatransferService, public route: Router, private _gridlayoutService: AmexioGridLayoutService) {\n    this.searchModel=new SearchModel();\n    this.data = [];\n    this.createLayouts();\n    this._gridlayoutService.createLayout(this.gridDesktop);\n\n  }\n\n  ngOnInit() {\n    this.properyDetails = this.dtsService.propertyDetails;\n    this.mainImagePath = this.properyDetails.images[0]\n    this.data.push(new GoogleMapOverlays(Number(this.properyDetails.location.latitude), Number(this.properyDetails.location.longitude), this.properyDetails.address, true, null, { city: 'pune' }))\n\n  }\n\n  onMarkerClick($event) {\n\n  }\n  onBuyNowClick(property: any) {\n    this.dtsService.propertyDetails = property\n    this.route.navigate(['/app-buy-now-card'])\n\n  }\n  createLayouts() {\n    this.gridDesktop = new GridConfig('Home', GridConstants.Desktop)\n      .addlayout([\"gridicon\", \"gridimage\", \"gridimage\", \"gridimage\", \"gridimage\", \"griddescription\", \"griddescription\", \"griddescription\", \"griddescription\", \"griddescription\"])\n      .addlayout([\"gridbutton\", \"gridbutton\", \"gridbutton\", \"gridbutton\", \"gridbutton\", \"griddescription\", \"griddescription\", \"griddescription\", \"griddescription\", \"griddescription\"])\n      .addlayout([\"gridmap\", \"gridmap\", \"gridmap\", \"gridmap\", \"gridmap\", \"griddescription\", \"griddescription\", \"griddescription\", \"griddescription\", \"griddescription\"]);\n\n  }\n  onImageClick(event: any) {\n    this.mainImagePath = event;\n  }\n\n  onBack() {\n    this.route.navigate(['/app-property-details', this.properyDetails.category, this.properyDetails.id]);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div style=\\\"cursor: pointer\\\">\\n            <amexio-row>\\n              <amexio-column [size]=\\\"12\\\">\\n                <table>\\n                  <tr>\\n                    <td>\\n                      <p>\\n                        <amexio-label size=\\\"medium-bold\\\">{{data.title}} </amexio-label> <br>{{data.subtitle}} <br>\\n                        <amexio-image [icon-class]=\\\"'fa fa-map-marker fa-lg'\\\" (onClick)=\\\"getLocation(data)\\\"></amexio-image> &nbsp;\\n                        <amexio-label>{{data.address}}.</amexio-label>\\n                      </p>\\n                    </td>\\n                  </tr>\\n                  <tr>\\n                    <td>\\n                      <amexio-image [icon-class]=\\\"'fa fa-inr fa-lg'\\\"></amexio-image> &nbsp;\\n                      <amexio-label size=\\\"medium-bold\\\">{{data.price}} </amexio-label>\\n                    </td>\\n                  </tr>\\n                  <tr>\\n                    <td>\\n                      <amexio-rating-input [(ngModel)]=\\\"data.rating\\\" [max]=\\\"'5'\\\" [read-only]=\\\"true\\\">\\n                      </amexio-rating-input>\\n                    </td>\\n                  </tr>\\n                  <ng-container *ngIf=\\\"isListCard\\\">\\n                  <tr>\\n                    <td>\\n                      <p>{{data.shortDescription}} </p>\\n                    </td>\\n                  </tr>\\n                  </ng-container>\\n                </table>\\n              </amexio-column>\\n            </amexio-row>\\n          </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { DatatransferService  } from \"../../service/datatransfer.service\";\nimport { Input } from \"@angular/core\";\n@Component({\n  selector: 'app-details-card',\n  templateUrl: './details-card.component.html',\n  styleUrls: ['./details-card.component.css']\n})\nexport class DetailsCardComponent implements OnInit {\n  @Input() data: any;\n    @Input() isListCard: boolean;\n\n\n  constructor(public dtsService:DatatransferService) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<!-- <div [ngStyle]=\\\"{'padding-top':250+'px'}\\\">  -->\\n<div>\\n  <img src=\\\"assets/images/living-room1.jpg\\\" class=\\\"bg\\\">\\n  <amexio-row>\\n    <amexio-column size=\\\"12\\\" style=\\\"padding-top:14%\\\">\\n    </amexio-column>\\n  </amexio-row>\\n  <amexio-layout-columns [orientation]=\\\"'vertical'\\\" [border]=\\\"false\\\">\\n    <amexio-layout-item [fit]=\\\"true\\\" *ngFor=\\\"let alignment of ['center']\\\">\\n      <amexio-layout-columns [border]=\\\"false\\\" [orientation]=\\\"'horizontal'\\\" [alignment]=\\\"alignment\\\">\\n        <amexio-layout-item>\\n          <amexio-label size=\\\"large-bold\\\" font-color=\\\"white\\\">\\n            What do you wanna buy today?\\n          </amexio-label>\\n        </amexio-layout-item>\\n      </amexio-layout-columns>\\n    </amexio-layout-item>\\n  </amexio-layout-columns>\\n  <amexio-layout-columns [orientation]=\\\"'vertical'\\\" [border]=\\\"false\\\" [alignment]=\\\"'center'\\\">\\n    <amexio-layout-item [fit]=\\\"true\\\">\\n      <amexio-layout-columns [border]=\\\"false\\\" [orientation]=\\\"'horizontal'\\\" [alignment]=\\\"'center'\\\">\\n        <amexio-layout-item>\\n          <app-search [search-model]=\\\"dtsService.searchModel\\\"></app-search>\\n        </amexio-layout-item>\\n      </amexio-layout-columns>\\n    </amexio-layout-item>\\n  </amexio-layout-columns>\\n</div>\\n<!-- </div> -->\\n\"","/**\n * Created by dattaram on 20/2/19.\n */\nimport {Component, OnInit} from '@angular/core';\nimport {DatatransferService} from '../../service/datatransfer.service';\nimport {SearchModel} from '../../models/search.model';\n\n@Component({\n  selector: 'home',\n  templateUrl: 'home.component.html'\n})\n\nexport class HomeComponent implements OnInit {\n  searchModel: SearchModel;\n  constructor(public dtsService: DatatransferService) {\n    // this.searchModel=new SearchModel();\n    this.dtsService.searchModel = new SearchModel();\n    // this.searchModel.type='buy';\n    this.dtsService.searchType = 'buy';\n    this.dtsService.transparentFlag = true;\n  }\n\n  ngOnInit() {\n  }\n}\n","module.exports = \"\"","module.exports = \"<amexio-card [show]=\\\"showLogin\\\" [header]=\\\"false\\\" [header-align]=\\\"'left'\\\" [footer]=\\\"true\\\" [footer-align]=\\\"'center'\\\">\\n\\n  <amexio-body>\\n    <amexio-row>\\n      <amexio-column size=\\\"12\\\">\\n        <amexio-layout-columns style=\\\"font-size:2em;\\\" [border]=\\\"false\\\" [fit]=\\\"true\\\" [alignment]=\\\"'center'\\\" [orientation]=\\\"'horizontal'\\\">\\n          <amexio-layout-item>\\n            <amexio-image class=\\\"authImage\\\" [path]=\\\"'assets/images/building.png'\\\"  [filter]=\\\"'round'\\\" [title-position]=\\\"'centered'\\\">\\n            </amexio-image>\\n          </amexio-layout-item>\\n        </amexio-layout-columns>\\n        <amexio-layout-columns style=\\\"font-size:2em;\\\" [border]=\\\"false\\\" [fit]=\\\"true\\\" [alignment]=\\\"'center'\\\" [orientation]=\\\"'horizontal'\\\">\\n          <amexio-layout-item>\\n            <amexio-label size=\\\"medium-bold\\\">Your Keys Await</amexio-label>\\n          </amexio-layout-item>\\n        </amexio-layout-columns>\\n        <amexio-layout-columns style=\\\"font-size:2em;\\\" [border]=\\\"false\\\" [fit]=\\\"true\\\" [alignment]=\\\"'center'\\\" [orientation]=\\\"'vertical'\\\">\\n          <amexio-layout-item>\\n            <amexio-label size=\\\"small-bold\\\" font-color=\\\"gray\\\">\\n              Secure, seamless search starts here</amexio-label>\\n          </amexio-layout-item>\\n        </amexio-layout-columns>\\n\\n        <amexio-layout-columns [border]=\\\"false\\\" [fit]=\\\"true\\\" [alignment]=\\\"'space-between'\\\" [orientation]=\\\"'horizontal'\\\">\\n          <amexio-layout-item>\\n            <amexio-login-social [style-type]=\\\"'circle'\\\" [api-key]=\\\"'743009515877-3rfp9u0b2iq95m2o2921kc3hecaamc3e'\\\" [type]=\\\"'google'\\\"\\n              (onLogin)=\\\"onGoogleClick($event)\\\">\\n            </amexio-login-social>\\n          </amexio-layout-item>\\n          <amexio-layout-item>\\n            <amexio-login-social [style-type]=\\\"'circle'\\\" [api-key]=\\\"'320512778592240'\\\" [type]=\\\"'facebook'\\\" (onLogin)=\\\"onFacebookClick($event)\\\">\\n            </amexio-login-social>\\n          </amexio-layout-item>\\n          <amexio-layout-item>\\n            <amexio-login-social [style-type]=\\\"'circle'\\\" [api-key]=\\\"'81wzvqnx8wtvmg'\\\" [type]=\\\"'linkedin'\\\" (onLogin)=\\\"onLinkedinClick($event)\\\">\\n            </amexio-login-social>\\n          </amexio-layout-item>\\n        </amexio-layout-columns>\\n      </amexio-column>\\n    </amexio-row>\\n\\n  </amexio-body>\\n  <amexio-action>\\n    <amexio-row>\\n      <amexio-column size=\\\"6\\\" [fit]=\\\"true\\\">\\n        <amexio-layout-columns [border]=\\\"false\\\" [orientation]=\\\"'horizontal'\\\" [alignment]=\\\"'center'\\\">\\n          <amexio-layout-item [fit]=\\\"true\\\">\\n            <amexio-button [size]=\\\"'default'\\\" [icon]=\\\"'fa fa-sign-in'\\\" [label]=\\\"'Sign in'\\\" (onClick)=\\\"onSignInClick($event)\\\" [type]=\\\"'primary'\\\"\\n              [tooltip]=\\\"'Sign in'\\\"></amexio-button>\\n          </amexio-layout-item>\\n        </amexio-layout-columns>\\n      </amexio-column>\\n      <amexio-column size=\\\"6\\\" [fit]=\\\"true\\\">\\n        <amexio-layout-columns [border]=\\\"false\\\" [orientation]=\\\"'horizontal'\\\" [alignment]=\\\"'center'\\\">\\n          <amexio-layout-item [fit]=\\\"true\\\">\\n            <amexio-button [size]=\\\"'default'\\\" [icon]=\\\"'fa fa-user-plus'\\\" [label]=\\\"'Register'\\\" (onClick)=\\\"onRegisterClick($event)\\\" [type]=\\\"'primary'\\\"\\n              [tooltip]=\\\"'Register'\\\"></amexio-button>\\n          </amexio-layout-item>\\n        </amexio-layout-columns>\\n      </amexio-column>\\n    </amexio-row>\\n  </amexio-action>\\n</amexio-card>\"","import { Component, OnInit , Input} from '@angular/core';\nimport { AuthenticationService } from '../../service/authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  @Input() showLogin: boolean;\n  showregisterWindow: boolean;\n  showSignInWindow: boolean;\n  constructor(public auth_Service: AuthenticationService) {\n\n   }\n\n  ngOnInit() {\n  }\nonSignInClick(event: any) {\nthis.auth_Service.showOTPWindow = false;\n  this.auth_Service.showregisterWindow = false;\n  this.auth_Service.showLogin = false;\n  this.auth_Service.showSignInWindow = true;\n}\nonRegisterClick(event: any) {\nthis.auth_Service.showOTPWindow = false;\n  this.auth_Service.showregisterWindow = true;\n  this.auth_Service.showLogin = false;\n  this.auth_Service.showSignInWindow = false;\n}\nonLoginClick() {\n\n}\nonFacebookClick(event: any) {\n}\nonGoogleClick(event: any) {\n}\n\n}\n","module.exports = \"\"","module.exports = \"<amexio-card [header]=\\\"false\\\" [header-align]=\\\"'left'\\\" [footer]=\\\"true\\\" [footer-align]=\\\"'center'\\\" [show]=\\\"showOTPWindow\\\">\\n    <amexio-body>\\n        <amexio-row>\\n            <amexio-column size =\\\"12\\\"\\n                            [fit]=\\\"true\\\">\\n                <amexio-layout-columns  [border]=\\\"false\\\" \\n         [fit]=\\\"true\\\" [alignment]=\\\"'center'\\\" [orientation]=\\\"'horizontal'\\\">\\n                    <amexio-layout-item>\\n                        <amexio-image class=\\\"authImage\\\" [path]=\\\"'assets/images/building.png'\\\"  [filter]=\\\"'round'\\\" [title-position]=\\\"'centered'\\\">\\n                        </amexio-image>\\n                    </amexio-layout-item>\\n                </amexio-layout-columns>\\n            </amexio-column>\\n        </amexio-row>\\n        <amexio-layout-columns style=\\\"font-size:2em;\\\" [border]=\\\"false\\\" [fit]=\\\"true\\\"\\n                [alignment]=\\\"'start'\\\" [orientation]=\\\"'vertical'\\\">\\n                <amexio-layout-item>\\n                     <amexio-text-input name=\\\"otp\\\" [field-label]=\\\"'OTP'\\\" [place-holder]=\\\"'Enter OTP'\\\" [(ngModel)]=\\\"oTP\\\">\\n                        </amexio-text-input>\\n                </amexio-layout-item>\\n              </amexio-layout-columns>\\n    </amexio-body>\\n    <amexio-action>\\n        <amexio-button [size]=\\\"'default'\\\" [type]=\\\"'secondary'\\\" [icon]=\\\"'fa fa-times'\\\" (onClick)=\\\"onCancel()\\\" label=\\\"Cancel\\\"></amexio-button>\\n        <amexio-button [size]=\\\"'default'\\\" [type]=\\\"'primary'\\\" [icon]=\\\"'fa fa-check'\\\" (onClick)=\\\"onVerify()\\\" label=\\\"Verify\\\"></amexio-button>\\n    </amexio-action>\\n</amexio-card>\"","import { Component, OnInit,Input } from '@angular/core';\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-otp-verification',\n  templateUrl: './otp-verification.component.html',\n  styleUrls: ['./otp-verification.component.css']\n})\nexport class OtpVerificationComponent implements OnInit {\n@Input() showOTPWindow:boolean;\noTP:string='';\n  constructor(public route: Router) { }\n\n  ngOnInit() {\n  }\n  onVerify(){\nthis.route.navigate(['/home']);\n  }\n  onCancel(){\n    this.route.navigate(['/home']);\n    \n  }\n}\n","module.exports = \"\"","module.exports = \"<div style=\\\"padding-top:65px\\\">\\n  <amexio-layout-columns [fit]=\\\"true\\\" [border]=\\\"false\\\" [orientation]=\\\"'horizontal'\\\" [alignment]=\\\"'center'\\\" style=\\\"background-color:grey;\\\">\\n    <amexio-layout-item>\\n      <app-searchbox [search-model]=\\\"searchModel\\\"></app-searchbox>\\n    </amexio-layout-item>\\n  </amexio-layout-columns>\\n  <amexio-row>\\n    <amexio-column size=\\\"3\\\" *ngFor=\\\"let property of propertyDetails.properties\\\">\\n      <ng-container *ngIf=\\\"category==='apartment'\\\">\\n        <amexio-card-ce (click)=\\\"getPropertyDetails(property)\\\">\\n          <amexio-image width=\\\"100%\\\" height=\\\"180px\\\" [path]=\\\"property.images[0]\\\"></amexio-image>\\n          <amexio-body-ce>\\n            <amexio-badge [absolute]=\\\"true\\\" [background]=\\\"'#e74c3c'\\\" [color]=\\\"'white'\\\" [top]=\\\"'-44px'\\\" [left]=\\\"'0px'\\\">\\n              <amexio-label (onClick)=\\\"getPropertyDetails(property)\\\">Photos</amexio-label>\\n            </amexio-badge>\\n            <app-details-card [data]=\\\"property\\\" [isListCard]=\\\"true\\\"></app-details-card>\\n          </amexio-body-ce>\\n          <amexio-action-ce [align]=\\\"'end'\\\" [border-top]=\\\"true\\\">\\n            <amexio-button [size]=\\\"'default'\\\" [icon]=\\\"'fa fa-money'\\\" [label]=\\\"'Buy Now'\\\" [type]=\\\"'primary'\\\" [tooltip]=\\\"'Buy Now'\\\">\\n            </amexio-button>\\n          </amexio-action-ce>\\n        </amexio-card-ce>\\n      </ng-container>\\n      <ng-container *ngIf=\\\"category==='tv'\\\">\\n      <amexio-card-ce  (click)=\\\"getPropertyDetails(property)\\\">\\n        <amexio-header-ce>\\n         &nbsp;&nbsp;  <amexio-image  [icon-class]=\\\"'fa fa-television fa-2x'\\\"></amexio-image>\\n          <!-- <amexio-label size=\\\"medium-bold\\\">{{property.title}}\\n          </amexio-label> -->\\n        </amexio-header-ce>\\n       <amexio-image width=\\\"100%\\\" height=\\\"180px\\\" [path]=\\\"property.images[0]\\\"></amexio-image>\\n        <amexio-badge [absolute]=\\\"true\\\" [background]=\\\"'#e74c3c'\\\" [color]=\\\"'white'\\\" [top]=\\\"'6%'\\\" [right]=\\\"'5%'\\\">\\n          <amexio-label>Photos</amexio-label>\\n        </amexio-badge>\\n\\n        <amexio-body-ce>\\n        <app-details-card [data]=\\\"property\\\" [isListCard]=\\\"true\\\"></app-details-card>\\n        </amexio-body-ce>\\n        <amexio-action-ce  [align]=\\\"'end'\\\" [border-top]=\\\"true\\\">\\n          <amexio-button [label]=\\\"'BUY NOW'\\\" [type]=\\\"'transparent'\\\" [tooltip]=\\\"'BUY'\\\">\\n          </amexio-button>\\n        </amexio-action-ce>\\n      </amexio-card-ce>\\n     </ng-container>\\n    </amexio-column>\\n\\n  </amexio-row>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { DatatransferService } from '../../service/datatransfer.service';\nimport { SearchModel } from '../../models/search.model';\n\n@Component({\n  selector: 'app-property-details',\n  templateUrl: './property-list.component.html',\n  styleUrls: ['./property-list.component.css']\n})\nexport class PropertyListComponent implements OnInit {\n  propertyDetails: any;\n  id: any;\n  searchKey: string;\n  category: any;\n  propertyData: any[] = [];\n  searchModel: SearchModel;\n  constructor(private route: ActivatedRoute, private router: Router, public _dtsService: DatatransferService) {\n    this.searchModel = new SearchModel();\n    this._dtsService.transparentFlag = false;\n    this._dtsService.searchType = 'buy';\n\n     this.propertyData = [];\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe((params: Params) => {\n      this.searchModel.category = params.id;\n      this.searchModel.searchData = params.category;\n      this.category=params.id;\n     this._dtsService.propertyListData = this.route.snapshot.data.propertyMetadata;\n       this.propertyDetails =  this._dtsService.getPropertyListCardData(this.searchModel.category,this.searchModel.searchData);\n    });\n  }\n  getPropertyDetails(property: any) {\n    property.id = this.searchModel.searchData;\n    property.category = this.searchModel.category;\n    this._dtsService.propertyDetails = property;\n    this.router.navigate(['/app-buy-property-details']);\n  }\n  getLocation(property) {\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div [ngStyle]=\\\"{'padding-top':320+'px'}\\\">\\n  <amexio-layout-columns [orientation]=\\\"'vertical'\\\" [border]=\\\"false\\\">\\n      <amexio-layout-item [fit]=\\\"true\\\" *ngFor=\\\"let alignment of ['center']\\\">\\n        <amexio-layout-columns [border]=\\\"false\\\" [orientation]=\\\"'horizontal'\\\" [alignment]=\\\"alignment\\\">\\n          <amexio-layout-item>\\n           <amexio-label size=\\\"large-bold\\\">\\n              Properties for Rent  \\n           </amexio-label>\\n          </amexio-layout-item>\\n        </amexio-layout-columns>\\n         <amexio-layout-columns [border]=\\\"false\\\" [orientation]=\\\"'horizontal'\\\" [alignment]=\\\"alignment\\\">\\n          <amexio-layout-item>\\n           <app-searchbox [search-model]=\\\"searchModel\\\"></app-searchbox>\\n          </amexio-layout-item>\\n        </amexio-layout-columns>\\n      </amexio-layout-item>\\n    </amexio-layout-columns>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { SearchModel } from \"../../models/search.model\";\n\n@Component({\n  selector: 'app-rent',\n  templateUrl: './rent.component.html',\n  styleUrls: ['./rent.component.css']\n})\nexport class RentComponent implements OnInit {\n searchModel:SearchModel;\n  constructor() {\n     this.searchModel=new SearchModel();\n    this.searchModel.type='rent';\n   }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \" <!-- <amexio-btn-group [size]=\\\"'default'\\\" >  -->\\n<amexio-button \\n    [label]=\\\"'Buy'\\\"\\n    [type]=\\\"'theme-color'\\\"\\n    [tooltip]=\\\"'toolTip'\\\"\\n    [icon]=\\\"'icon'\\\"\\n    [disabled]=\\\"false\\\"\\n    (onClick)=\\\"onBuyClick($event)\\\" class=\\\"localsearch\\\">\\n</amexio-button>\\n<amexio-button\\n    [label]=\\\"'Sell'\\\"\\n    [type]=\\\"'theme-color'\\\"\\n    [tooltip]=\\\"'toolTip'\\\"\\n    [icon]=\\\"'icon'\\\"\\n    [disabled]=\\\"false\\\"\\n    (onClick)=\\\"onSell()\\\" class=\\\"localsearch\\\"> \\n</amexio-button>\\n  <!-- </amexio-btn-group>  -->\\n<app-searchbox [search-model]=\\\"searchModel\\\"></app-searchbox>\\n<amexio-dialogue [(show)]=\\\"warningdialogue\\\" [material-design]=\\\"true\\\" [message]=\\\"warningMsg\\\" [title]=\\\"'Warning'\\\" [message-type]=\\\"'warning'\\\" [type]=\\\"'alert'\\\">\\n</amexio-dialogue>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SearchModel } from \"../../models/search.model\";\nimport { AuthenticationService } from \"src/app/service/authentication.service\";\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n @Input('search-model') searchModel: SearchModel;\n  warningdialogue = false;\n  warningMsg = '';\n   constructor(public route: Router,public _authService:AuthenticationService) {\n\n   }\n\n  ngOnInit() {}\n\n  onBuyClick() {\n    this.route.navigate(['/home']);\n  }\n  onSell() {\n    if(this._authService.loginFlag){\n     this.route.navigate(['/sell']);\n    }else{\n     this.route.navigate(['/login']);\n    }\n    \n  }\n\n\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"localsearch\\\">\\n    <amexio-dropdown [(ngModel)]=\\\"searchModel.category\\\" [place-holder]=\\\"'Choose'\\\" name=\\\"category\\\" [field-label]=\\\"''\\\" [data]=\\\"categories\\\"\\n        [display-field]=\\\"'name'\\\" [value-field]=\\\"'id'\\\" [enable-sort]=\\\"true\\\" [sort]=\\\"'asc'\\\">\\n    </amexio-dropdown>\\n    <amexio-text-input [field-label]=\\\"'label'\\\" name=\\\"name\\\" [has-label]=\\\"false\\\" [place-holder]=\\\"'Search'\\\" [(ngModel)]=\\\"searchModel.searchData\\\"\\n        [icon-feedback]=\\\"true\\\" class=\\\"localsearchtext\\\">\\n    </amexio-text-input>\\n    <amexio-button [label]=\\\"'Search'\\\" [type]=\\\"'theme-color'\\\" [badge]=\\\"badge\\\" [tooltip]=\\\"'toolTip'\\\" [icon]=\\\"'icon'\\\" [disabled]=\\\"false\\\"\\n        [size]=\\\"'default'\\\" [loading]=\\\"false\\\" [block]=\\\"false\\\" [bg-color]=\\\"'red'\\\" (onClick)=\\\"onSearchButtonClick($event)\\\">\\n    </amexio-button>\\n</div>\\n<amexio-layout-columns [border]=\\\"false\\\" [orientation]=\\\"'horizontal'\\\" [alignment]=\\\"'center'\\\">\\n    <amexio-layout-item>\\n        <ng-container *ngIf=\\\"warningdialogue\\\">\\n            <amexio-label size=\\\"medium-bold\\\" font-color=\\\"white\\\">\\n                {{warningMsg}}\\n            </amexio-label>\\n        </ng-container>\\n    </amexio-layout-item>\\n</amexio-layout-columns>\\n\\n\\n<!-- <amexio-dialogue [(show)]=\\\"warningdialogue\\\" [material-design]=\\\"true\\\" [message]=\\\"warningMsg\\\" [title]=\\\"'Error'\\\" [message-type]=\\\"'error'\\\" [type]=\\\"'alert'\\\">\\n</amexio-dialogue> -->\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SearchModel } from '../../models/search.model';\nimport { DatatransferService } from 'src/app/service/datatransfer.service';\nimport { HttpService } from 'src/app/service/shared/http.service';\n@Component({\n  selector: 'app-searchbox',\n  templateUrl: './searchbox.component.html',\n  styleUrls: ['./searchbox.component.css']\n})\nexport class SearchboxComponent implements OnInit {\n  @Input('search-model') searchModel: SearchModel;\n  id: any;\n  warningdialogue = false;\n  warningMsg: any;\n  categories: any = [];\n  validSearchKey:boolean;\n  constructor(public route: Router, public _dtsService: DatatransferService, public _httpService: HttpService) {\n    this.searchModel = new SearchModel();\n    this.warningMsg = '';\n    this.categories = [{\n      id: 'tv',\n      name: 'TV'\n    },\n    {\n      id: 'apartment',\n      name: 'Apartment'\n    }];\n  }\n\n  ngOnInit() {\n    this.searchModel.type = 'buy';\n\n  }\n\n  onSearchButtonClick() {\n    debugger;\n    this.validSearchKey=false;\n    if (this.searchModel.category === 'apartment') {\n      if (this._dtsService.appartmentData .length > 0) {\n        this.navigateToPropertyDetails();\n      } else {\n        this.getApartmentPropertyDetails();\n      }\n    } else if (this.searchModel.category === 'tv') {\n      if (this._dtsService.tvData .length > 0) {\n        this.navigateToPropertyDetails();\n      } else {\n        this.getTVPropertyDetails();\n      }\n    }else{\n      this.warningMsg='Data not found, enter valid search data.';\n      this.warningdialogue=true;\n    }\n  }\n  checkSearchData(data:any){\n    debugger;\n    if(data==='apartment'){\n      this._dtsService.appartmentData.forEach(obj => {\n      if(obj.searchKey === this.searchModel.searchData){\n        this.validSearchKey=true;\n      }\n    });\n    }else if(data==='tv') {\n      this._dtsService.tvData.forEach(obj => {\n      if(obj.searchKey === this.searchModel.searchData){\n        this.validSearchKey=true;\n      }\n    });\n    }\n   \n  }\n  navigateToPropertyDetails() {\n    this.checkSearchData(this.searchModel.category);\n    if(this.validSearchKey){\n     this.route.navigate(['/app-property-details', this.searchModel.category, this.searchModel.searchData]);\n    }else{\n      this.warningMsg='Data not found, enter valid search data.'\n      this.warningdialogue=true;\n    }\n          \n  }\n\n  getApartmentPropertyDetails() {\n    this._httpService.fetchdata('assets/json/apartment.json').subscribe(\n      (res: any) => {\n        this._dtsService.appartmentData = res;\n        this.navigateToPropertyDetails();\n      });\n  }\n\n  getTVPropertyDetails() {\n    debugger;\n    this._httpService.fetchdata('assets/json/tv.json').subscribe(\n      (res: any) => {\n        this._dtsService.tvData = res;\n        this.navigateToPropertyDetails();\n      });\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"<div style=\\\"padding-top:5%\\\">\\n  <amexio-row>\\n    <amexio-column size=\\\"6\\\">\\n      <div [formGroup]=\\\"sellFormGroup\\\">\\n        <amexio-card [header]=\\\"false\\\" [header-align]=\\\"'left'\\\" [footer]=\\\"true\\\" [footer-align]=\\\"'right'\\\" height=\\\"650\\\">\\n          <amexio-body>\\n            <!-- <amexio-layout-columns [border]=\\\"false\\\" [orientation]=\\\"'horizontal'\\\" [alignment]=\\\"'left'\\\">\\n          <amexio-layout-item>\\n            <amexio-image style=\\\"cursor: pointer;\\\" [icon-class]=\\\"'fa fa-arrow-left fa-lg'\\\" [tooltip]=\\\"'Back'\\\" (onClick)=\\\"onBack()\\\"></amexio-image>\\n          </amexio-layout-item>\\n        </amexio-layout-columns> -->\\n            <amexio-badge [absolute]=\\\"true\\\" [background]=\\\"'black'\\\" [color]=\\\"'white'\\\" [top]=\\\"'0px'\\\" [right]=\\\"'0px'\\\">\\n              Post Ads here\\n            </amexio-badge>\\n            <amexio-row>\\n              <amexio-column size=\\\"6\\\">\\n                <amexio-text-input [(ngModel)]=\\\"sellModel.title\\\" formControlName=\\\"Title\\\" field-label=\\\"Title\\\" place-holder=\\\"Enter Title\\\">\\n                </amexio-text-input>\\n              </amexio-column>\\n              <amexio-column size=\\\"6\\\">\\n                <amexio-text-input [(ngModel)]=\\\"sellModel.subtitle\\\" formControlName=\\\"SubTitle\\\" field-label=\\\"Sub Title\\\" place-holder=\\\"Enter Sub Title\\\">\\n                </amexio-text-input>\\n              </amexio-column>\\n              <amexio-column size=\\\"6\\\">\\n                <amexio-dropdown [(ngModel)]=\\\"sellModel.category\\\" formControlName=\\\"Category\\\" [place-holder]=\\\"'Choose'\\\" name=\\\"category\\\" [field-label]=\\\"'Category'\\\"\\n                  [data]=\\\"categories\\\" [display-field]=\\\"'name'\\\" [value-field]=\\\"'id'\\\">\\n                </amexio-dropdown>\\n              </amexio-column>\\n              <amexio-column size=\\\"6\\\">\\n                <amexio-text-input [(ngModel)]=\\\"sellModel.tag\\\" formControlName=\\\"Tag\\\" [field-label]=\\\"'Tag'\\\">\\n                </amexio-text-input>\\n              </amexio-column>\\n              <amexio-column size=\\\"6\\\">\\n                <amexio-text-input [(ngModel)]=\\\"sellModel.price\\\" formControlName=\\\"Price\\\" field-label=\\\"Price\\\" place-holder=\\\"Enter Price\\\">\\n                </amexio-text-input>\\n              </amexio-column>\\n              <amexio-column size=\\\"6\\\">\\n                <amexio-text-input [(ngModel)]=\\\"sellModel.city\\\" formControlName=\\\"City\\\" field-label=\\\"City\\\" place-holder=\\\"Enter Price\\\">\\n                </amexio-text-input>\\n              </amexio-column>\\n              <amexio-column size=\\\"6\\\">\\n                <amexio-text-input [(ngModel)]=\\\"sellModel.locality\\\" formControlName=\\\"Locality\\\" field-label=\\\"Locality\\\" place-holder=\\\"Enter Price\\\">\\n                </amexio-text-input>\\n              </amexio-column>\\n              <amexio-column size=\\\"6\\\">\\n                <amexio-fileupload [http-url]=\\\"'/upload'\\\" [http-method]=\\\"'POST'\\\" [file-type]=\\\"'image/*'\\\" [multiple-file]=\\\"'*'\\\" [field-label]=\\\"'Photo Upload'\\\"\\n                  (onFileUpload)=\\\"onPhotoUpload($event)\\\" formControlName=\\\"Photo\\\" [(ngModel)]=\\\"sellModel.image\\\" (onRemove)=\\\"onPhotoRemoveClick($event)\\\">\\n                </amexio-fileupload>\\n              </amexio-column>\\n              <amexio-column size=\\\"12\\\">\\n                <amexio-image class=\\\"sellImage\\\" *ngFor=\\\"let photos of sellModel.images\\\"  [path]=\\\"photos\\\">\\n                </amexio-image>\\n                &nbsp; &nbsp;\\n              </amexio-column>\\n              <amexio-column size=\\\"12\\\">\\n                <amexio-textarea-input [(ngModel)]=\\\"sellModel.description\\\" formControlName=\\\"Description\\\" [enable-popover]=\\\"true\\\" [field-label]=\\\"'Description'\\\"\\n                  [place-holder]=\\\"'Enter Description'\\\" [allow-blank]=\\\"false\\\" [error-msg]=\\\"'Please enter description'\\\" [icon-feedback]=\\\"true\\\"\\n                  [rows]=\\\"'2'\\\" [columns]=\\\"'2'\\\">\\n                </amexio-textarea-input>\\n              </amexio-column>\\n            </amexio-row>\\n          </amexio-body>\\n          <amexio-action>\\n            <amexio-button [disabled]=\\\"!sellFormGroup.valid\\\" [size]=\\\"'default'\\\" [type]=\\\"'secondary'\\\" [icon]=\\\"'fa fa-floppy-o'\\\" (onClick)=\\\"onAddClick()\\\"\\n              label=\\\"Post\\\"></amexio-button>\\n          </amexio-action>\\n        </amexio-card>\\n      </div>\\n    </amexio-column>\\n    <amexio-column size=\\\"6\\\" [fit]=\\\"true\\\">    \\n         <amexio-card\\n           [header]=\\\"false\\\"\\n           [footer]=\\\"false\\\"\\n           height=\\\"650\\\">\\n             <amexio-body>\\n               <amexio-row>\\n               <amexio-column size=\\\"6\\\" [fit]=\\\"true\\\" *ngFor=\\\"let property of data.properties\\\">\\n               <amexio-badge [absolute]=\\\"true\\\" [background]=\\\"'black'\\\" [color]=\\\"'white'\\\" [top]=\\\"'0px'\\\" [right]=\\\"'0px'\\\">\\n              Existing Ads\\n            </amexio-badge>\\n            <br>\\n                <amexio-card-ce>\\n            <amexio-header-ce>\\n              <amexio-label size=\\\"medium-bold\\\">\\n                {{property.title }}\\n              </amexio-label>\\n            </amexio-header-ce> \\n            <amexio-image width=\\\"100%\\\" height=\\\"130px\\\" [path]=\\\"property.images[0]\\\"></amexio-image>\\n            <amexio-body-ce>\\n              <amexio-label size=\\\"smalls\\\">\\n                {{property.subtitle }}\\n              </amexio-label>\\n              <br>\\n              <amexio-label size=\\\"medium-bold\\\">\\n                {{property.price }}\\n              </amexio-label>\\n            </amexio-body-ce>\\n          </amexio-card-ce>\\n               </amexio-column>\\n               </amexio-row>\\n             </amexio-body>\\n         </amexio-card>\\n        </amexio-column>\\n  </amexio-row>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { DatatransferService } from \"../../service/datatransfer.service\";\nimport { SearchModel } from \"../../models/search.model\";\nimport { HttpService } from \"src/app/service/shared/http.service\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { SellDataModel } from \"../../models/sellData.model\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-sell',\n  templateUrl: './sell.component.html',\n  styleUrls: ['./sell.component.css']\n})\nexport class SellComponent implements OnInit {\n  searchModel: SearchModel;\n  sellModel: SellDataModel;\n  data: any;\n  categories: any;\n  sellFormGroup: FormGroup;\n  constImgaePath:string=\"assets/images/\"\n  constructor(public _route: Router, public _dtsService: DatatransferService, public _httpService: HttpService, private fb: FormBuilder) {\n    this.searchModel = new SearchModel();\n    this.sellModel = new SellDataModel();\n    this.searchModel.type = 'sell';\n    this._dtsService.transparentFlag = false;\n\n\n  }\n\n  ngOnInit() {\n    this._httpService.fetchdata('assets/json/sell.json').subscribe(\n      (res: any) => {\n        this.data = res;\n      });\n    this.valiadteSellForm();\n    this.categories = [{\n      id: 'tv',\n      name: 'TV'\n    },\n    {\n      id: 'apartment',\n      name: 'Apartment'\n    },\n   {\n      id: 'twoWheeler',\n      name: 'Two Wheeler'\n    },\n    {\n      id: 'electronics',\n      name: 'Electronics'\n    }];\n\n\n  }\n  valiadteSellForm() {\n    this.sellFormGroup = this.fb.group({\n      Title: ['', [Validators.required]],\n      SubTitle: ['', [Validators.required]],\n      Category: ['', [Validators.required]],\n      Tag: ['', [Validators.required]],\n      Price: ['', [Validators.required]],\n      City: ['', [Validators.required]],\n      Locality: ['', [Validators.required]],\n      Description: ['', [Validators.required]],\n      Photo: ['', { standalone: true }]\n    });\n  }\n  onPhotoUpload(event: any) {\n    this.sellModel.images=[];\n    this.sellModel.image=this.constImgaePath+event[0].name;\n    // this.sellModel.images=event;\n    event.forEach((obj:any) => {\n    this.sellModel.images.push(this.constImgaePath+obj.name);\n    });\n  \n  }\n  onPhotoRemoveClick(event:any){\n     this.sellModel.images.forEach((obj,index) => {\n       if(obj==this.constImgaePath+event.fileData.name){\n            this.sellModel.images.splice(index,1);\n       }\n    });\n  }\n  onBack() {\n    this._route.navigate(['/home'])\n  }\n  onAddClick(){\n    this.data.properties.push(this.sellModel);  \n  }\n}\n","module.exports = \"\"","module.exports = \"<div [formGroup]=\\\"signInGroup\\\">\\n<amexio-card [header]=\\\"false\\\" [header-align]=\\\"'left'\\\" [footer]=\\\"true\\\" [footer-align]=\\\"'center'\\\" [show]=\\\"showSignInWindow\\\">\\n  <amexio-body>\\n     <amexio-row>\\n      <amexio-column size=\\\"12\\\">\\n     <amexio-layout-columns [border]=\\\"false\\\" [orientation]=\\\"'horizontal'\\\" [alignment]=\\\"right\\\">\\n          <amexio-layout-item>\\n            <amexio-image style=\\\"cursor: pointer;\\\"  [icon-class]=\\\"'fa fa-arrow-left fa-lg'\\\" [tooltip]=\\\"'Back'\\\" (onClick)=\\\"onBack()\\\"></amexio-image>\\n          </amexio-layout-item>\\n        </amexio-layout-columns>\\n   <amexio-layout-columns style=\\\"font-size:2em;\\\" [border]=\\\"false\\\" [fit]=\\\"true\\\" [alignment]=\\\"'center'\\\" [orientation]=\\\"'horizontal'\\\">\\n          <amexio-layout-item>\\n            <amexio-image class=\\\"authImage\\\" [path]=\\\"'assets/images/building.png'\\\"  [filter]=\\\"'round'\\\" [title-position]=\\\"'centered'\\\">\\n            </amexio-image>\\n          </amexio-layout-item>\\n        </amexio-layout-columns>\\n        <amexio-layout-columns style=\\\"font-size:2em;\\\" [border]=\\\"false\\\" [fit]=\\\"true\\\" [alignment]=\\\"'center'\\\" [orientation]=\\\"'horizontal'\\\">\\n          <amexio-layout-item>\\n            <amexio-label size=\\\"medium-bold\\\">Login to your Account</amexio-label>\\n          </amexio-layout-item>\\n        </amexio-layout-columns>\\n      </amexio-column>  \\n     </amexio-row>\\n    <amexio-row>\\n      <amexio-column [size]=\\\"12\\\">\\n        <amexio-number-input formControlName=\\\"Phone\\\" name=\\\"name\\\"  field-label=\\\"Phone\\\" place-holder=\\\"Enter Name\\\" [(ngModel)]=\\\"loginModel.phone\\\" [enable-popover]=\\\"true\\\" [error-msg]=\\\"'Please enter valid phone number'\\\">\\n        </amexio-number-input>\\n        <amexio-password-input formControlName=\\\"Password\\\" [enable-popover]=\\\"true\\\" [field-label]=\\\"'Password '\\\" name=\\\"password\\\" [place-holder]=\\\"'Enter Password'\\\"\\n          [allow-blank]=\\\"false\\\" [error-msg]=\\\"'Please enter password'\\\" [min-length]=\\\"6\\\" [min-error-msg]=\\\"'Minimum 6 char required'\\\"\\n          [max-length]=\\\"32\\\" [max-error-msg]=\\\"'Maximum 32 char allowed'\\\" [icon-feedback]=\\\"true\\\" [(ngModel)]=\\\"loginModel.password\\\">\\n        </amexio-password-input>\\n      </amexio-column>\\n    </amexio-row>\\n  </amexio-body>\\n  <amexio-action>\\n  \\n  <!-- <amexio-button  [size]=\\\"'medium'\\\" [type]=\\\"'primary'\\\" (onClick)=\\\"onBack()\\\" label=\\\"Back\\\"></amexio-button> -->\\n    <amexio-button   [size]=\\\"'default'\\\" [type]=\\\"'secondary'\\\" [icon]=\\\"'fa fa-times'\\\" (onClick)=\\\"onCancel()\\\" label=\\\"Cancel\\\"></amexio-button>\\n    <amexio-button [disabled]=\\\"!signInGroup.valid\\\"  [size]=\\\"'default'\\\" [icon]=\\\"'fa fa-sign-in'\\\" [type]=\\\"'primary'\\\" (onClick)=\\\"onSignInClick()\\\" label=\\\"Login\\\"></amexio-button>\\n  </amexio-action>\\n</amexio-card>\\n</div>\"","import { Component, OnInit ,Input} from '@angular/core';\nimport { LoginModel } from \"../../models/login.model\";\nimport { AuthenticationService } from \"src/app/service/authentication.service\";\nimport { Router } from \"@angular/router\";\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.css']\n})\nexport class SignInComponent implements OnInit {\n@Input() showSignInWindow:boolean\n@Input('login-model') loginModel: LoginModel;\nsignInGroup:FormGroup;\n  constructor(private auth_Service:AuthenticationService,public route: Router, private fb: FormBuilder) { \n    this.loginModel=new LoginModel();\n  }\n\n  ngOnInit() {\n    this.validateSigninform();\n  }\n  validateSigninform(){\n    this.signInGroup = this.fb.group({\n        Phone: ['', [Validators.required, Validators.min(1111111111),Validators.max(9999999999)]],      \n        Password: ['', [Validators.required]],\n      \n      });\n  }\n  onSignInClick(){\n     this.route.navigate(['/home']);\n     this.auth_Service.loginFlag=true;\n  }\n  onCancel(){\n  this.route.navigate(['/home']);\n\n}\n\nonBack(){\n  this.auth_Service.showOTPWindow=false;\n  this.auth_Service.showregisterWindow=false;\n  this.auth_Service.showLogin=true;\n  this.auth_Service.showSignInWindow=false;\n}\n}\n","module.exports = \"\"","module.exports = \"<div [formGroup]=\\\"userRegistrationGroup\\\">\\n<amexio-card [header]=\\\"false\\\" [header-align]=\\\"'left'\\\" [footer]=\\\"true\\\" [footer-align]=\\\"'center'\\\" [show]=\\\"showregisterWindow\\\">\\n  <amexio-body>\\n     <amexio-row>\\n      <amexio-column size=\\\"12\\\">\\n    <amexio-layout-columns [border]=\\\"false\\\" [orientation]=\\\"'horizontal'\\\" [alignment]=\\\"right\\\">\\n          <amexio-layout-item>\\n            <amexio-image style=\\\"cursor: pointer;\\\" [icon-class]=\\\"'fa fa-arrow-left fa-lg'\\\" [tooltip]=\\\"'Back'\\\" (onClick)=\\\"onBack()\\\"></amexio-image>\\n          </amexio-layout-item>\\n        </amexio-layout-columns>\\n        <amexio-layout-columns style=\\\"font-size:2em;\\\" [border]=\\\"false\\\" [fit]=\\\"true\\\" [alignment]=\\\"'center'\\\" [orientation]=\\\"'horizontal'\\\">\\n          <amexio-layout-item>\\n            <amexio-image class=\\\"authImage\\\"  [path]=\\\"'assets/images/building.png'\\\"  [filter]=\\\"'round'\\\" [title-position]=\\\"'centered'\\\">\\n            </amexio-image>\\n          </amexio-layout-item>\\n        </amexio-layout-columns>\\n        <amexio-layout-columns style=\\\"font-size:2em;\\\" [border]=\\\"false\\\" [fit]=\\\"true\\\" [alignment]=\\\"'center'\\\" [orientation]=\\\"'horizontal'\\\">\\n          <amexio-layout-item>\\n            <amexio-label size=\\\"medium-bold\\\">Your Keys Await</amexio-label>\\n          </amexio-layout-item>\\n        </amexio-layout-columns>\\n      </amexio-column>\\n     </amexio-row>\\n      <!-- </amexio-layout-item>\\n    </amexio-layout-columns> -->\\n    <amexio-row>\\n      <amexio-column size=\\\"12\\\" [fit]=\\\"true\\\">\\n        <amexio-text-input formControlName=\\\"Name\\\" field-label=\\\"Name\\\" place-holder=\\\"Enter Name\\\" [(ngModel)]=\\\"userModel.name\\\">\\n        </amexio-text-input>\\n        <amexio-number-input  formControlName=\\\"Phone\\\"  [field-label]=\\\"'Phone'\\\" [place-holder]=\\\"'Enter phone Number'\\\" [(ngModel)]=\\\"userModel.phone\\\"\\n        [enable-popover]=\\\"true\\\" [error-msg]=\\\"'Please enter valid phone number'\\\">\\n        </amexio-number-input>\\n        <amexio-password-input   formControlName=\\\"Password\\\" [enable-popover]=\\\"true\\\" [field-label]=\\\"'Password'\\\" [place-holder]=\\\"'Enter Password'\\\"\\n          [allow-blank]=\\\"false\\\" [error-msg]=\\\"'Please enter password'\\\" [min-length]=\\\"6\\\" [min-error-msg]=\\\"'Minimum 6 char required'\\\"\\n          [max-length]=\\\"32\\\" [max-error-msg]=\\\"'Maximum 32 char allowed'\\\" [icon-feedback]=\\\"true\\\" [(ngModel)]=\\\"userModel.password\\\">\\n        </amexio-password-input>\\n      </amexio-column>\\n    </amexio-row>\\n  </amexio-body>\\n  <amexio-action>\\n    <!-- <amexio-button  [size]=\\\"'medium'\\\" [type]=\\\"'primary'\\\" (onClick)=\\\"onBack()\\\" label=\\\"Back\\\"></amexio-button> -->\\n      <amexio-button   [size]=\\\"'default'\\\" [type]=\\\"'secondary'\\\" [icon]=\\\"'fa fa-times'\\\" (onClick)=\\\"onCancel()\\\" label=\\\"Cancel\\\"></amexio-button>\\n    <amexio-button [disabled]=\\\"!userRegistrationGroup.valid\\\"  [size]=\\\"'default'\\\" [icon]=\\\"'fa fa-user-plus'\\\" [type]=\\\"'primary'\\\" (onClick)=\\\"onRegister()\\\" label=\\\"Register\\\"></amexio-button>\\n  </amexio-action>\\n</amexio-card>\\n</div>\"","import { Component, OnInit ,Input} from '@angular/core';\nimport { AuthenticationService } from \"../../service/authentication.service\";\nimport { UserDetails } from \"../../models/user.details.model\";\nimport { Router } from \"@angular/router\";\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-user-registration',\n  templateUrl: './user-registration.component.html',\n  styleUrls: ['./user-registration.component.css']\n})\nexport class UserRegistrationComponent implements OnInit {\n  @Input() showregisterWindow:boolean=false;\n  @Input('user-model') userModel: UserDetails;\n     userRegistrationGroup: FormGroup;\n\n  constructor(private auth_Service:AuthenticationService,public route: Router, private fb: FormBuilder ) {\n    this.userModel= new UserDetails();\n   }\n\n  ngOnInit() {\n    this.valiadteUserRegistrationForm();\n  }\n\n  valiadteUserRegistrationForm() {\n      this.userRegistrationGroup = this.fb.group({\n        Name: ['', [Validators.required]],      \n        Phone: ['', [Validators.required,Validators.min(1111111111),Validators.max(9999999999)]],\n        Password: ['', [Validators.required]]\n      \n      });\n    }\n  onRegister(){\n   this.auth_Service.showOTPWindow=true;\n  this.auth_Service.showregisterWindow=false;\n  this.auth_Service.showLogin=false;\n  this.auth_Service.showSignInWindow=false;\n  \n  }\nonCancel(){\n\n this.route.navigate(['/home']);\n}\n\nonBack(){\nthis.auth_Service.showOTPWindow=false;\n  this.auth_Service.showregisterWindow=false;\n  this.auth_Service.showLogin=true;\n  this.auth_Service.showSignInWindow=false;\n}\n}\n","\nexport class LoginModel {\n  phone:string='';\n  password:string='';\n  constructor() {\n  }\n}","\nexport class SearchModel {\n  type:string='';\n  searchData:string='';\n  category:string='';\n  constructor() {\n  }\n}","export class SellDataModel {\n  title:string='';\n  subtitle:string='';\n  category:string='';\n  tag:string='';\n  price:string='';\n  city:string='';\n  locality:string='';\n  description:string='';\n  image:string='';\n  images:any=[];\n  constructor() {\n  }\n}\n\n","\nexport class UserDetails {\n  name:string='';\n  phone:string='';\n  password:string='';\n  constructor() {\n  }\n}","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  showWindow:boolean;\n  showLogin: boolean;\n  showregisterWindow: boolean;\n  showSignInWindow: boolean;\n  showOTPWindow: boolean;\n  loginFlag:boolean=false;\n\n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\nimport { SearchModel } from \"src/app/models/search.model\";\nimport { Router } from '@angular/router';\nimport { HttpService } from \"../service/shared/http.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatatransferService {\ntransparentFlag:boolean;\nnavItemcolor:string;\npropertyDetails:any;\ncategory:string;\nsearchModel:SearchModel;\nid:String;\nsearchType:string;\npropertyListData:any;\nappartmentData: any[] = [];\ntvData: any[] = [];\n  constructor(public route:Router,public _httpService: HttpService) {\n\n   }\n  //  getPropertyList(data): any{\n  //    debugger;\n  //    if (data === 'apartment') {\n  //      return this.getApartmentPropertyDetails();\n  //   } else if(data === 'tv'){    \n  //      return this.getTVPropertyDetails();\n  //     }\n  //   }\n  //   getApartmentPropertyDetails() {\n  //   this._httpService.fetchdata('assets/json/apartment.json').subscribe(\n  //     (res: any) => {\n  //      return this.appartmentData = res;\n  //     });\n  // }\n\n  // getTVPropertyDetails() {\n  //   this._httpService.fetchdata('assets/json/tv.json').subscribe(\n  //     (res: any) => {\n  //      return this.tvData = res;\n  //     });\n  // }\n\n  getPropertyListCardData(id:any,data:any){\n   if (id === 'apartment') {\n    return  this.propertyListData.find(x => x.searchKey === data);\n    } else if (id === 'tv') {\n    return this.propertyListData.find(x => x.searchKey === data);\n    }\n  }\n   \n\n}\n","/**\n * Created by dattaram on 20/2/19.\n */\n\nimport {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve} from '@angular/router';\nimport {DatatransferService} from './datatransfer.service';\nimport { HttpService } from \"src/app/service/shared/http.service\";\n\n@Injectable()\nexport class PropertyResolver implements Resolve<any> {\n  constructor(public _dtsService: DatatransferService, public _httpService: HttpService) {\n  }\n  resolve(route: ActivatedRouteSnapshot): any {\n   return this._httpService.fetchdata('assets/json/'+route.paramMap.get('id')+'.json');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs/index';\nimport {SERVICE_URL} from \"../service.constant\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HttpService {\n\n    constructor(private http: HttpClient) {\n\n    }\n\n//     fetch(serviceUrl: string, methodType: string): Observable<any> {\n//         const headers = new HttpHeaders().append('Content-Type', 'application/json;charset=UTF-8');\n//         if (methodType === 'post') {\n//             return this.http.post(SERVICE_URL.BASE_APP_URL + serviceUrl, { headers });\n//         } else if (methodType === 'get') {\n//             return this.http.get(SERVICE_URL.BASE_APP_URL + serviceUrl , { headers });\n//         }\n//     }\n\n\n//     post(serviceUrl: string, methodType: string, requestJson: any): Observable<any> {\n\n//         const headers = new HttpHeaders().append('Content-Type', 'application/json;charset=UTF-8');\n//         if (methodType === 'post') {\n//             return this.http.post(SERVICE_URL.BASE_APP_URL + serviceUrl, requestJson, { headers });\n//         } else if (methodType === 'get') {\n//             return this.http.get(SERVICE_URL.BASE_APP_URL + serviceUrl, { headers });\n//         }\n//     }\n\n//   fetchLocalData(serviceUrl: string, methodType: string): Observable<any> {\n//     const headers = new HttpHeaders().append('Content-Type', 'application/json;charset=UTF-8');\n//     if (methodType === 'post') {\n//       return this.http.post( serviceUrl, { headers });\n//     } else if (methodType === 'get') {\n//       return this.http.get(serviceUrl , { headers });\n//     }\n//   }\n\n   fetchdata(url:string){\n        return this.http.get(url);\n    }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}